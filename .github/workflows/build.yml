name: Build/release

on:
  push:
    branches: [ main ]

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get version
        run: echo "VERSION_ID=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION_ID }}
          release_name: Version ${{ env.VERSION_ID }}
          draft: false
          prerelease: ${{ contains(env.VERSION_ID, 'beta') || contains(env.VERSION_ID, 'alpha') }}

  build:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install Dependencies
        run: npm install

      - name: Build and Package
        run: npm run dist

      - name: Upload Artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/lamp-setup-${{ env.VERSION_ID }}.${{ matrix.os }}.zip
          asset_name: lamp-setup-${{ env.VERSION_ID }}.${{ matrix.os }}.zip
          asset_content_type: application/zip